{"version":3,"sources":["logo.svg","TypographyPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FONTS","FiraSans","TypographyPage","_ref","Object","esm_extends","react_default","a","createElement","style","fontFamily","className","HomePage","Link","to","sandyBeige","CozyPage","_ref2","width","height","backgroundColor","textAlign","App","BrowserRouter","Switch","Route","path","exact","component","render","props","Component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8OCGlCC,qBAAQ,CACZC,SAAU,0BAsBGC,MAnBf,SAAAC,GAEE,OAFoCC,OAAAC,EAAA,EAAAD,CAAA,GAAAD,GAGlCG,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,WAAYV,EAAMC,WAC9BK,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,eAAd,cACAL,EAAAC,EAAAC,cAAA,uPAC6OF,EAAAC,EAAAC,cAAA,WAD7O,wOAEuOF,EAAAC,EAAAC,cAAA,WAFvO,wMAGuMF,EAAAC,EAAAC,cAAA,WAHvM,8RAI6RF,EAAAC,EAAAC,cAAA,WAJ7R,oOAKmOF,EAAAC,EAAAC,cAAA,WALnO,sQCNR,SAASI,EAATT,GAAgCC,OAAAC,EAAA,EAAAD,CAAA,GAAAD,GAC9B,OACEG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,SAAT,qBACJR,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,eAAT,iBAMZ,IAAMC,EAAa,mBAEnB,SAASC,EAATC,GAAgCb,OAAAC,EAAA,EAAAD,CAAA,GAAAa,GAC9B,OACEX,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAES,MAAO,QAASC,OAAQ,QAASC,gBAAiBL,IAC9DT,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAAEY,UAAW,WAAxB,kBAwBSC,mLAfX,OACEhB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAACe,EAAA,EAAD,KACEjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWhB,IACjCN,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOC,KAAK,cAAcE,UAAW1B,IACrCI,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOC,KAAK,QAAQE,UAAWZ,IAC/BV,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOI,OAAQ,SAAAC,GAAK,OAAIxB,EAAAC,EAAAC,cAAA,+BATlBuB,aClBEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASR,OAAOvB,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f31f65fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport './TypographyPage.css'\n\nconst FONTS = {\n  FiraSans: 'Fira Sans, sans-serif'\n}\n\nfunction TypographyPage({ ...props }) {\n\n  return (\n    <div style={{ fontFamily: FONTS.FiraSans }}>\n      <div className=\"container\">\n        <h1 className=\"text-center\">Typography</h1>\n        <p>\n          If God is the mystery of the universe, these mysteries, we're tackling these mysteries one by one. If you're going to stay religious at the end of the conversation, God has to mean more to you than just where science has yet to tread. <br/>\n          As a scientist, I want to go to Mars and back to asteroids and the Moon because I'm a scientist. But I can tell you, I'm not so naive a scientist to think that the nation might not have geopolitical reasons for going into space. <br/>\n          I see all this talk about jobs going overseas as a symptom of the absence of innovation. And the absence of innovation is a symptom of there being no major national priority to advance a frontier. <br/>\n          I don't know anybody who said, 'I love that teacher, he or she gave a really good homework set,' or 'Boy, that was the best class I ever took because those exams were awesome.' That's not what people want to talk about. It's not what influences people in one profession or another.  <br/>\n          If we find life out there, and it's not us, we will deem it not intelligent. But what may be equally as likely is that we find life that's vastly more intelligent than we are. If that's the case, we are putty in their hands. <br/>\n          Where there's water on Earth, you find life as we know it. So if you find water somewhere else, it becomes a remarkable draw to look closer to see if life of any kind is there, even if it's bacterial, which would be extraordinary for the field of biology.\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default TypographyPage","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\nimport logo from './logo.svg';\nimport './App.css';\n\nimport TypographyPage from './TypographyPage'\n\nfunction HomePage({ ...props }) {\n  return (\n    <div>\n      <ul>\n        <li><Link to=\"/cozy\">Cozy Design Page</Link></li>\n        <li><Link to=\"/typography\">Typography</Link></li>\n      </ul>\n    </div>\n  )\n}\n\nconst sandyBeige = 'rgb(251,250,246)'\n\nfunction CozyPage({ ...props }) {\n  return (\n    <div style={{ width: '100vw', height: '100vh', backgroundColor: sandyBeige }}>\n      <h1 style={{ textAlign: 'center' }}>Cozy Page</h1>\n    </div>\n  )\n}\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact component={HomePage} />\n            <Route path=\"/typography\" component={TypographyPage} />\n            <Route path=\"/cozy\" component={CozyPage} /> \n            <Route render={props => <div>404</div>} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}